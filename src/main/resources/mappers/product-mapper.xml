<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-/mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">
	<select id = "selectProductList" resultType="Product" >
		select *
		from PRODUCT
		where P_STATUS ='Y'
		order by P_ID 
	</select>

	<select id ="selectProductList1" resultType="Product">
		select *
		from PRODUCT
		where p_STATUS = 'Y' and p_sell = 'Y'
	</select>


	<resultMap type="Product" id="ProductList">
		<id property="p_Id" column ="P_ID"/>
		<result property="p_name" column="P_NAME"/>
		<result property="p_content" column="P_CONTENT"/>
		<result property="p_createDate" column="P_CREATEDATE"/>
		<result property="p_updateDate" column="P_UPDATEDATE"/>
		<result property="p_like" column="P_LIKE"/>
		<result property="p_quantity" column="P_QUANTITY"/>
		<result property="p_lunchtype" column="P_LUNCHTYPE"/>
		<result property="p_price" column="P_PRICE"/>
		<result property="p_sell" column="P_SELL"/>
		<result property="p_status" column="P_STATUS"/>
		
	</resultMap>
	<!-- 상품 리스트 검색 -->
	<select id="searchList" parameterType="map" resultMap="ProductList">
		select *
		from PRODUCT
		where P_STATUS = 'Y'
		<choose>
			<when test="type.equals('상품번호')">
				and P_ID like '%' || #{sContent} || '%'
			</when>
			<when test="type.equals('상품명')">
				and P_NAME like '%' ||  #{sContent}|| '%'
			</when>
		</choose>
		
	</select>
	
	<update id="deletedProduct" parameterType="_int">
		update product
		set P_STATUS ='N'
		where P_ID = #{p_Id}
	</update>
	
	<!-- 상품 상태 변경 -->
	<update id="updatePsell" parameterType="_int">
		update product
		set P_SELL ='N'
		where P_ID = #{p_Id}
	</update>
	
	<update id="updatePsell2" parameterType="_int">
		update PRODUCT
		set P_SELL = 'Y'
		where P_ID =#{p_Id}
	</update>
	
<!-- 등록부분 2개로 ================================================================= -->	
<insert id="inProduct" parameterType="Product">
	insert  into product 
	values(SEQ_P_ID.nextval, #{p_name}, #{p_content}, SYSDATE,SYSDATE, default, #{p_quantity},  #{p_lunchtype} , #{p_price} ,default, default, default)
			
</insert>

<!-- 메인 사진 -->
<insert id="insertMain"  parameterType="PictureList">
	insert into pictureList
	values(SEQ_PT_ID.NEXTVAL,#{pt_name},#{pt_realName},SYSDATE,SYSDATE,SEQ_P_ID.CURRVAL, DEFAULT, 0)


</insert>

<insert id="insertSub" parameterType="PictureList">
	insert into PictureList
		values(SEQ_PT_ID.NEXTVAL,#{pt_name},#{pt_realName},SYSDATE,SYSDATE,SEQ_P_ID.CURRVAL, DEFAULT, 1)
</insert>


<!-- 등록부분 2개로  끝================================================================= -->	
<select id="selectList8"  resultType = "hashmap">
	<![CDATA[
	
	select *
	from (select *
		  from PRODUCT
		  	left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y'
		  order by P_CREATEDATE desc)
		  where rownum < 9
		 
	 ]]>
		  
</select>


<select id="pictureList" resultType = "hashmap">

	<![CDATA[

	select *
	from (select *
		  from PICTURELIST
		  where PT_STATUS = 'Y' AND PT_TYPE = 0
		  order by PT_CREATEDATE desc)
		  where rownum < 9
	 ]]>
	
</select>

<!-- 업데이트 사진 정보 가지고 가기 -->
<select id="updateProduct" parameterType="_int" resultMap="ProductList">
	select *
	from PRODUCT 
	where P_ID = #{p_Id}
</select>

<select id="updatePicture" parameterType="_int" resultType="PictureList">
	select *
	from PICTURELIST
	where PT_STATUS = 'Y' and  P_ID = #{p_Id}
</select>
<select id="selectList8do" resultType="hashmap">
<![CDATA[
	
	select *
	from (select *
		  from PRODUCT
		  left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y' AND P_LUNCHTYPE = '도시락'
		  order by P_LIKE desc)
		   where rownum < 9
 
	 ]]>
</select>
<select id="selectList8sal" resultType="hashmap">
<![CDATA[
	
	select *
	from (select *
		  from PRODUCT
		  left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y' AND P_LUNCHTYPE = '샐러드'
		  order by P_LIKE desc)
		   where rownum < 9
 
	 ]]>
</select>

<!-- 상품 수정 쿼리 -->

<!--  -->


<!-- ====================  페이징 갯수 가지고 가기  ====================================  -->
<select id="listproduct"  resultType="_int" >
	select count(*)
	from PRODUCT
	where P_STATUS = 'Y'
</select>

<select id="listdo"  resultType="_int">
select count(*)
	from PRODUCT
	where P_STATUS = 'Y' and P_LUNCHTYPE = '도시락'


</select>
<select id="listsal"  resultType="_int">
select count(*)
	from PRODUCT
	
	where P_STATUS = 'Y' and P_LUNCHTYPE = '샐러드'
</select>


<select id="select" resultType="hashmap">
<![CDATA[
	select *
	from (select *
		  from PRODUCT
		  	left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y'
		  order by P_CREATEDATE desc)
 
	 ]]>
</select>

<select id="selectType1" resultType="hashmap" >
	
	<![CDATA[
	
	select *
	from (select *
		  from PRODUCT
		  left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y' AND P_LUNCHTYPE = '도시락'
		  order by P_CREATEDATE desc)
 
	 ]]>

</select>
<select id="selectType2" resultType="hashmap" >
	
	<![CDATA[
	
	select *
	from (select *
		  from PRODUCT
		  left join PICTURELIST using(P_ID)
		  where P_STATUS = 'Y' AND PT_TYPE = 0 AND PT_STATUS = 'Y' AND P_LUNCHTYPE = '샐러드'
		  order by P_LIKE )
		   where rownum < 9
 
	 ]]>

</select>
<select id="selectReplyList" parameterType="_int" resultType="Productreview">
	select *
	from (select *
		  from 	PRODUCTREVIEW left join PRODUCT using(P_ID)
		  where p_ID = #{p_Id}
		  order by p_Id  )
	order by p_Id 
</select>

<!-- 댓글 등록 -->
<insert id="insertReply" parameterType="Productreview">

insert into PRODUCTREVIEW
values(SEQ_PV_ID.nextval , #{p_Id}, #{pv_user}, #{pv_reviewContent}, to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), sysdate, default, 0 )

</insert>

<!-- 댓글 삭제  -->
<update id="deleteReply">
	update PRODUCTREVIEW
	set STATUS = 'N'
	where PV_ID = #{pv_Id}

</update>

<!-- 댓글 수정 -->
<update id="updateReply">
	update PRODUCTREVIEW
	set PV_REVIEWCONTENT = #{pv_reviewContent}
	where PV_ID = #{pv_Id}
</update>


<!-- qna 등록 하기 -->
 
<insert id="insertQna" parameterType="ProductQna"> 
	insert into PRODUCTQNA
	values(QNA_NO.nextval , #{qna_user}, #{qna_content}, to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), #{p_Id}, default, default, #{qna_secret}, default)

</insert>


<!-- qna 리스트 호출 -->
<select id="selectQnaList" parameterType="_int" resultMap="productQnaAdmin">
	select *
	from (select *
		  from 	PRODUCTQNA left join PRODUCT using(P_ID)
		  where p_ID = #{p_Id}
		  order by QNA_ID desc )
	order by QNA_ID desc

</select>

<!-- 상품 문의 삭제 -->
<update id="deletedQna" >
	update PRODUCTQNA
	set QNA_STATUS = 'N'
	where qna_id = #{qna_Id}
</update>



<resultMap type="ProductQna" id="productQnaAdmin">
		<id property="qna_Id" column="QNA_ID"/>
		<result property="qna_user" column="QNA_USER"/>
		<result property="qna_content" column="QNA_CONTENT"/>
		<result property="qna_createDate" column="QNA_CREATEDATE"/>
		<result property="p_Id" column="P_ID"/>
		<result property="p_title" column="P_NAME"/>
		<result property="p_lunchType" column="P_LUNCHTYPE"/>
		<result property="qna_status" column="QNA_STATUS"/>
		<result property="qna_answer" column="QNA_ANSWER"/>
		<result property="qna_secret" column="QNA_SECRET"/>
		<result property="qna_answerDate" column="QNA_ANSWERDATE"/>	
		<result property="answer_content" column="ANSWER_CONTENT"/>	
		<result property="answer_Id" column="ANSWER_ID"/>	
</resultMap>

<!-- 관리자 QnA 리스트 쿼리 -->
<select id="QnaAdminList" resultMap="productQnaAdmin">
	select *
	from (select *
		  from 	PRODUCTQNA left join PRODUCT using(P_ID) left join PRODUCTANSWER using(QNA_ID)
		  order by QNA_ID desc )
	where QNA_STATUS = 'Y'
</select>

<select id="adminSearchQnA" parameterType="string" resultMap="productQnaAdmin">
	select *
		  from 	PRODUCTQNA left join PRODUCT using(P_ID) left join PRODUCTANSWER using(QNA_ID)
		 
			where QNA_STATUS = 'Y'
    	 
	<choose>
		<when test="type.equals('답변대기')">
			and QNA_ANSWER = 'N'
		</when>
		<when test="type.equals('답변완료')">
			and QNA_ANSWER = 'Y'
		</when>
	</choose>
	order by QNA_ID desc 
</select>



<update id="updateQna">
	update PRODUCTQNA
		set QNA_CONTENT = #{qna_content}, QNA_SECRET = #{qna_secret}
		where QNA_ID = #{qna_Id}

</update>


<!-- 답글 달아 주기 -->
<insert id="insertAnswer" parameterType="ProductAnswer">
	insert into PRODUCTANSWER
		values(ANSWER_ID.nextval , '운영자', #{answer_content},to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), #{p_Id},#{qna_Id}  )


</insert>


<!-- 가져오기 -->
<select id="selectAnswer" resultType="ProductAnswer">
	select *
	from (select *
			from PRODUCTANSWER left join PRODUCT using(P_ID)
			where qna_Id = #{qna_Id})
			
</select>


<select id="selectAnswer2" resultType="ProductAnswer">
	select qna_id, qna_user, pq.qna_createdate, pq.qna_content, answer_content, answer_createdate, answer_id
	from PRODUCTANSWER
	    left join PRODUCT p using(P_ID)
	    join productqna pq using(qna_id)
	where qna_Id = #{ qna_Id }
			
</select>

<update id="updateQnaType">
	update PRODUCTQNA
		set QNA_ANSWER ='Y',QNA_ANSWERDATE = #{qna_answerDate}
		where QNA_ID = #{qna_Id} 
	
</update>


<delete id="deleteAnswer">
	DELETE from PRODUCTANSWER
	WHERE  ANSWER_ID = #{answer_Id}
</delete>

<update id="updateQnaType2">
	update PRODUCTQNA
	set QNA_ANSWER = 'N' , QNA_ANSWERDATE = ''
	where QNA_ID = #{qna_Id}
</update>

<update id="AnswerUpdate">
	update PRODUCTANSWER
		set ANSWER_CONTENT = #{answer_content}
		where ANSWER_ID = #{answer_Id}

</update>



</mapper>